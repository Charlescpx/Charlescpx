import tkinter as tk
from tkinter import messagebox
import random
import time

# Definindo as cartas
card_images = ["fruta1.png", "fruta2.png", "fruta3.png", "fruta4.png", "fruta5.png", "fruta6.png"]
card_images *= 2  # Duas de cada imagem para fazer pares
random.shuffle(card_images)

# Configuração da janela principal
root = tk.Tk()
root.title("Jogo da Memória")
root.geometry("400x500")
root.config(bg="lightblue")

# Variáveis do jogo
buttons = []
flipped_cards = []
matches = 0
start_time = time.time()

# Função para exibir o tempo de jogo
def update_timer():
    elapsed_time = int(time.time() - start_time)
    timer_label.config(text=f"Tempo: {elapsed_time} s")
    if matches < len(card_images) // 2:
        root.after(1000, update_timer)

# Função para reiniciar o jogo
def restart_game():
    global card_images, matches, flipped_cards, start_time
    random.shuffle(card_images)
    matches = 0
    start_time = time.time()
    timer_label.config(text="Tempo: 0 s")
    result_label.config(text="")
    for button in buttons:
        button.config(image=back_image, state="normal")
    update_timer()

# Função para verificar pares
def check_match():
    global matches
    if len(flipped_cards) == 2:
        card1, card2 = flipped_cards
        if card_images[card1] == card_images[card2]:
            buttons[card1].config(state="disabled")
            buttons[card2].config(state="disabled")
            matches += 1
            if matches == len(card_images) // 2:
                elapsed_time = int(time.time() - start_time)
                result_label.config(text=f"Parabéns, seu tempo foi {elapsed_time} segundos")
                messagebox.showinfo("Jogo Concluído", f"Parabéns! Você terminou em {elapsed_time} segundos.")
        else:
            root.after(1000, lambda: buttons[card1].config(image=back_image))
            root.after(1000, lambda: buttons[card2].config(image=back_image))
        flipped_cards.clear()

# Função para virar uma carta
def flip_card(index):
    if index not in flipped_cards:
        buttons[index].config(image=card_images_obj[index])
        flipped_cards.append(index)
        if len(flipped_cards) == 2:
            root.after(500, check_match)

# Carregar as imagens
back_image = tk.PhotoImage(file="palhaco.png")
card_images_obj = [tk.PhotoImage(file=image) for image in card_images]

# Layout do jogo
timer_label = tk.Label(root, text="Tempo: 0 s", font=("Arial", 16), bg="lightblue")
timer_label.pack(pady=10)
result_label = tk.Label(root, text="", font=("Arial", 16), bg="lightblue")
result_label.pack()

# Grid de cartas
frame = tk.Frame(root, bg="lightblue")
frame.pack()
for i in range(12):  # 3 colunas x 4 linhas
    button = tk.Button(frame, image=back_image, command=lambda i=i: flip_card(i))
    button.grid(row=i//3, column=i%3, padx=10, pady=10)
    buttons.append(button)

# Botão de reinício
restart_button = tk.Button(root, text="Reiniciar", command=restart_game)
restart_button.pack(pady=20)

# Iniciar o timer
update_timer()

root.mainloop()
